{
    "id" : "com.jackgraddon.h2mmgui",
    "runtime" : "org.gnome.Platform",
    "runtime-version" : "master",
    "sdk" : "org.gnome.Sdk",
    "command" : "h2mm-gui",
    "finish-args" : [
        "--share=network",
        "--share=ipc",
        "--socket=fallback-x11",
        "--device=dri",
        "--socket=wayland",
        "--talk-name=org.freedesktop.Flatpak",
        "--filesystem=home:ro"
    ],
    "cleanup" : [
        "/include",
        "/lib/pkgconfig",
        "/man",
        "/share/doc",
        "/share/gtk-doc",
        "/share/man",
        "/share/pkgconfig",
        "*.la",
        "*.a"
    ],
    "modules" : [
        {
            "name" : "h2mm-cli",
            "buildsystem" : "simple",
            "build-commands" : [
                "cat > h2mm-cli << 'EOFMOCK'",
                "#!/bin/bash",
                "",
                "# Mock h2mm-cli for development and testing",
                "# This script simulates the behavior of the real h2mm-cli tool",
                "",
                "# Sample mod data (simulating installed mods)",
                "MODS_DATA_FILE=\"/tmp/h2mm-gui-mock-mods.txt\"",
                "",
                "# Initialize mock data if it doesn't exist",
                "if [ ! -f \"$MODS_DATA_FILE\" ]; then",
                "    cat > \"$MODS_DATA_FILE\" << EOF",
                "Sample Mod 1 (enabled)",
                "Test Mod 2 (disabled)",
                "Example Mod 3 (enabled)",
                "EOF",
                "fi",
                "",
                "case \"$1\" in",
                "    \"list\")",
                "        # Return list of installed mods with their status",
                "        cat \"$MODS_DATA_FILE\"",
                "        ;;",
                "    \"install\")",
                "        if [ -z \"$2\" ]; then",
                "            echo \"Error: No mod path specified\" >&2",
                "            exit 1",
                "        fi",
                "        # Simulate installing a mod",
                "        mod_path=\"$2\"",
                "        mod_name=$(basename \"$mod_path\" .zip)",
                "        echo \"$mod_name (enabled)\" >> \"$MODS_DATA_FILE\"",
                "        echo \"Successfully installed mod: $mod_name\"",
                "        ;;",
                "    \"uninstall\")",
                "        if [ -z \"$2\" ]; then",
                "            echo \"Error: No mod name specified\" >&2",
                "            exit 1",
                "        fi",
                "        # Simulate uninstalling a mod",
                "        mod_name=\"$2\"",
                "        # Remove the mod from the list (both enabled and disabled versions)",
                "        sed -i \"/^$mod_name (enabled)$/d; /^$mod_name (disabled)$/d\" \"$MODS_DATA_FILE\"",
                "        echo \"Successfully uninstalled mod: $mod_name\"",
                "        ;;",
                "    \"enable\")",
                "        if [ -z \"$2\" ]; then",
                "            echo \"Error: No mod name specified\" >&2",
                "            exit 1",
                "        fi",
                "        # Simulate enabling a mod",
                "        mod_name=\"$2\"",
                "        sed -i \"s/^$mod_name (disabled)$/$mod_name (enabled)/\" \"$MODS_DATA_FILE\"",
                "        echo \"Successfully enabled mod: $mod_name\"",
                "        ;;",
                "    \"disable\")",
                "        if [ -z \"$2\" ]; then",
                "            echo \"Error: No mod name specified\" >&2",
                "            exit 1",
                "        fi",
                "        # Simulate disabling a mod",
                "        mod_name=\"$2\"",
                "        sed -i \"s/^$mod_name (enabled)$/$mod_name (disabled)/\" \"$MODS_DATA_FILE\"",
                "        echo \"Successfully disabled mod: $mod_name\"",
                "        ;;",
                "    *)",
                "        echo \"Usage: h2mm-cli {list|install <path>|uninstall <name>|enable <name>|disable <name>}\" >&2",
                "        exit 1",
                "        ;;",
                "esac",
                "",
                "exit 0",
                "EOFMOCK",
                "chmod +x h2mm-cli",
                "install -Dm755 h2mm-cli ${FLATPAK_DEST}/bin/h2mm-cli"
            ],
            "sources" : []
        },
        {
            "name" : "h2mm-gui",
            "builddir" : true,
            "buildsystem" : "meson",
            "sources" : [
                {
                    "type" : "dir",
                    "path" : "."
                }
            ]
        }
    ]
}
